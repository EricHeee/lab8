# Dictionary for what each letter would be replaced with
LetterDict = {
    'a':'3', 'b':'!', 'c':'@', 'd':'#', 'e':'1', 'f':'$', 'g':'%', 'h':'9', 'i':'5', 'j':'^',
    'k':'&', 'l':'*', 'm':'+', 'n':'6', 'o':'4', 'p':'?', 'q':'<', 'r':'8', 's':'7', 't':'2', 
    'u':'>', 'v':':', 'w':'M', 'x':'A', 'y':'W', 'z':'E',
    '-':'||', '.': 'a', ',': 'b', '?':'c', '!': 'd'
}


# Translates single words into secret code
def translator(word):

    secretCode = ''
    index1 = 0
    index2 = 1

    # While loop translating words to secret code according to the secret dictionary
    while index2 <= len (word):
    
        # Replace each letter with a symbol from the dictionary above
        letter = word[index1 : index2]
        code = LetterDict[letter]
        secretCode = secretCode + code
        index1 = index1 + 1
        index2 = index2 + 1
    return secretCode


# Finds position of words in the text
def wordFinder(text):
    
    # Create positions for slicing words
    wordList = []
    pos1 = 0
    pos2 = text.index(' ')
    pos3 = text.index(' ') in range (pos2, len(text))

    # Using index to find individual words in text
    for pos3 in range (0, len(text)):
        word = text[pos1:pos2]
        
        # Add words to the wordList
        wordList.append(word)
        pos1 = pos2
        pos2 = pos3
    return wordList
